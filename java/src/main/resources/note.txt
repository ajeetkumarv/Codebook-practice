Java is pass by referenc or pass by value
    https://www.youtube.com/watch?v=-5NC5_sI-vQ

What is a POJO
    https://www.youtube.com/watch?v=oqPiEc2zNb0&list=WL&index=2&t=2s
    1) Can't extend or implement anything
    2) No external annotation

    this is usable itself without anything external

What is Java Bean
    https://www.youtube.com/watch?v=oqPiEc2zNb0&list=WL&index=2&t=2s
    1) has private members
    2) has no-args constructor (implicit is ok)
    3) has public getters and setters
    4) Must be serializable

Why Strings are Immutable
    https://www.youtube.com/watch?v=Bj9Mx_Lx3q4&list=WL&index=9
    https://stackoverflow.com/questions/390703/what-is-the-purpose-of-the-expression-new-string-in-java#:~:text=Initializes%20a%20newly%20created%20String,unnecessary%20since%20Strings%20are%20immutable.
    http://kjetilod.blogspot.com/2008/09/string-constructor-considered-useless.html
    new String() is actually Implementation Dependent, like Apache Harmony has different

Immutable classes in java
    Wrapper classes, String, LocalDateTime

Map contract
    1) if two objects are equals, must have same hashCode
    2) if hashCode is same, equals may not be same

Use least specific interface, this makes intentions clear and provides only what you need.

A fail-fast system doesn't continue with errors. it stops immediately. fail-safe are opposite bcz they work on the clone of data.
Fail-fast iterations => ConcurrentModificationException
Fail-safe iterations => NO ConcurrentModificationException

Streams
    Streams lets you process data in a expressive way. we can write code that is declarative, composable, parallelizable.
    It's an object on which we can define operations
    it doesn't change the data it processes.
    All the methods of stream that return stream are lazy

Lambda
    it's an object without Identity
    it is to be looked as block of code that can be moved around, not as a object on which we invoke methods.
    Types of lambda expression is FunctionalInterface

Duration => Hours, minutes, Seconds
Period => Year, month, days

In Normal case we use garbasge variable. it only purpose is to act as an intermediate throwaway container. in java 8 this
implementation detail is pushed into the library where it belongs.

Default methods helped evolve interfaces non intrusively

final
    As a programmer, I'd better know what i want to do, declaring intent and having the compiler enforce it on my behalf
    is a good thing.

Non-Reifiable Types
A reifiable type is a type whose type information is fully available at runtime. This includes primitives, non-generic types, raw types, and invocations of unbound wildcards.

Non-reifiable types are types where information has been removed at compile-time by type erasure — invocations of
    generic types that are not defined as unbounded wildcards. A non-reifiable type does not have all of
    its information available at runtime. Examples of non-reifiable types are List<String> and List<Number>;
    the JVM cannot tell the difference between these types at runtime. As shown in Restrictions on Generics,
    there are certain situations where non-reifiable types cannot be used: in an instanceof expression,
    for example, or as an element in an array.
    https://docs.oracle.com/javase/tutorial/java/generics/nonReifiableVarargsType.html#:~:text=A%20reifiable%20type%20is%20a,is%20fully%20available%20at%20runtime.&text=Non%2Dreifiable%20types%20are%20types,not%20defined%20as%20unbounded%20wildcards.

Heap Pollution (More on above link)
    Heap pollution occurs when a variable of a parameterized type refers to an object that is not of that parameterized type.
    This situation occurs if the program performed some operation that gives rise to an unchecked warning at compile-time.

Defensive copy
    is a technique to mitigate -ve effects of unintensional modifications of shared objects.

Immutability Advantages
    Simple to create, test, and use
    Automatically thread safe and have no synchronization issues
    Allow hashCode cache
    don't need to be defensively copied
    Don't need a copy constructor

Joshua Bloch
    Classes should be immutable unless there is a good reason to make them mutable. if not possible, limit their ability to mutate

Aggregation vs Composition
    Types can exist without car
    Room can't be without house (walls)

    Composition is strong association
    Aggregation is weak association

    Composition is part-of
    Aggregation is has-a

Lambda expression vs Annonymous class
    Ann class is for class declaration and Lambda is for method body
    Ann class generates an extra class wit $ and lambda uses invoke dynamics
    Ann class this represents ann class, this inside lambda refers to class
    Ann class can be used for > 1 abstract method, lambda only for SAM

Invoke Dynamics (Since 7)
    It is a new JVM instruction (opcode) which allows a compiler to generate code which calls
    methods with a looser specification than was previously possible --
    if you know what "duck typing" is, invokedynamic basically allows for duck typing.
    There's not too much you as a Java programmer can do with it; if you're a tool creator,
    though, you can use it to build more flexible, more efficient JVM-based languages.

    Before Java 7, the JVM only had four method invocation types:
    invokevirtual to call normal class methods,
    invokestatic to call static methods,
    invokeinterface to call interface methods, and
    invokespecial to call constructors or private methods.

-XX:+UseStringDeduplication
    StringDeduplicationAgeThreshold JVM setting default value 3
    -XX:+CompactStrings since java 9 on by default
    https://stackoverflow.com/questions/42080648/why-when-you-would-not-want-to-have-java-8-usestringdeduplication-enabled-in-jvm

https://stackoverflow.com/questions/586363/why-is-super-super-method-not-allowed-in-java?rq=1

serial, parallel, CMS, G1GC, ZGC

Default garbage collectors:
    Java 7 - Parallel GC
    Java 8 - Parallel GC
    Java 9 - 15 - G1 GC


    https://stackoverflow.com/questions/33206313/default-garbage-collector-for-java-8
    https://backstage.forgerock.com/knowledge/kb/article/a75965340
    Parallel is also known as Throughput collector
    JEP 248: Make G1 the Default Garbage Collector
        http://openjdk.java.net/jeps/248
    https://docs.oracle.com/en/java/javase/11/gctuning/z-garbage-collector1.html#GUID-A5A42691-095E-47BA-B6DC-FB4E5FAA43D0


jagged arrays

Before JDK 7, the pool was part of permgen space, and from JDK 7 to now, it is part of the main heap memory.

Thread is a worker, Runnable is the Job
Thread class itself implements Runnable
Once the thread is started, it can’t be started again.
